#是否生成注释
generator.comment=true
#代码输出目录
generator.outDir=E:\\Test
#基包名
generator.basePackage=com.smartdoc.manager
#数据库表前缀,例如表t_user则需要去除前缀生成正确的实体
generator.table.prefix=t_
#指定需要用哪张数据表生成代码，不指定则生成全部表的代码,指定表名后下面的过滤器将失效
generator.table.name=
# @since 1.6.3
# 过滤数据库表，生成的时候只生成和过滤器匹配的表
generator.table.filter.prefix=
# app版本号
generator.application.version=1.0
#生成项目的名称
generator.applicationName=smart-doc-admin
#需要生成的代码层
#可生成的代码层dao,model,service,controller,mapper,controllerTest,serviceTest
generator.layers=dao,model,service,controller,mapper,controllerTest,serviceTest
#需要生成的方法，方法间用英文逗号隔开，写错将无法生成基础方法
#可生成的方法包括add,update,delete,query,page,queryToListMap。
# query方法查询单条数据，page生成分页,queryToListMap是查询结果以List<Map<Stirng,Object>>返回
generator.methods=add,update,delete,query,page
#mybatis自动转驼峰映射，默认开启
generator.mapUnderscoreToCamelCase=true
#是否开启mybatis缓存，只能填写true或者false
generator.enableCache=true
#是否需要生成mybatis mapper配置文件的ResultMap
#默认不生成result
generator.resultMap=false
# @since 1.5
# 打包springboot时是否采用assembly
# 如果采用则将生成一系列的相关配置和一系列的部署脚本
generator.package.assembly=true
# @since 1.6.4
# 指定springboot项目的日志文件，避免使用assembly打包后在window修改脚本的烦恼
# 推荐根据自己的日志在自动生成前指定好，屏蔽在系统间修改脚本的发生字符不一致问题
generator.application.logConfig=log4j2.xml
# @since 1.7.1
# 该值为true时会为springboot maven项目创建Dockerfile和相应的构建脚本
generator.docker=true
# @since 1.6
# 多数据源多个数据数据源用逗号隔开[就是给不同的数据源一个别名]，不需要多数据源环境则空出来
# 对于多数据源会集成分布式事务
# uage:generator.multiple.datasource=oracle,mysql
generator.multiple.datasource=
# @since 1.6
# jta-atomikos分布式事务支持
generator.jta=false
# @since 1.7.2
# default is use maven build,current support maven and gradle
# generator.build.tool=gradle //use gradle
generator.build.tool=maven
# @since 1.7.8
# if true use lombok
generator.lombok=true
# @since 1.7.9
# 是否需要生成db相关代码,配置false 或者true
generator.useDb=true
# @since 1.8.0
# 是否支持mybatis-plus,配置false 或者true
generator.useMybatisPlus=



